name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:            # manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      # 1.  Checkout repo
      - uses: actions/checkout@v4

      # 2.  Set up Python
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      # 3.  Install dependencies + package (editable)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install ruff pytest pytest-cov

      # 4.  Static lint (optional, quick)
      - name: Ruff lint
        run: ruff check .

      # 5.  Run tests with coverage
      - name: Pytest
        run: |
          pytest -q --cov=metrics_definitions tests/

      # 6.  Upload coverage to Codecov (optional)
      - name: Upload coverage to Codecov
        if: ${{ github.repository_owner == 'YOUR_GH_USERNAME_OR_ORG' }} # ‚Üê optional guard
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
name: CI and Publish

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install ruff pytest pytest-cov
      - name: Ruff lint
        run: ruff check .
      - name: Pytest
        run: pytest -q --cov=silent_killers tests/
      - name: Upload coverage to Codecov
        if: ${{ github.repository_owner == 'YOUR_GH_USERNAME_OR_ORG' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip build twine
      - name: Build distribution
        run: python -m build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

